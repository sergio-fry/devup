require "yaml"

require "devup/compose"
require "devup/service"

module Devup
  class Environment
    attr_reader :pwd, :compose

    def initialize(pwd:, compose: nil)
      @pwd = pwd.to_s.strip
      @compose = compose || Compose.new(root.join("docker-compose.yml"), project: project)
    end

    def project
      pwd.split("/")[-1].strip
    end

    def env
      compose.services.map { |name| Service.new(compose, name) }.map { |s| service_env(s) }.join("\n")
    end

    def up
      compose.up
      write_dotenv
    end

    def down
      compose.stop
      compose.rm
      clear_dotenv
    end

    def root
      Pathname.new pwd
    end

    private

    def service_env(service)
      res = []

      res << "export #{service.name.upcase}_HOST=0.0.0.0"

      if service.ports.size > 0
        res << "export #{service.name.upcase}_PORT=#{service.ports.first.to}"

        service.ports.each do |port|
          res << "export #{service.name.upcase}_PORT_#{port.from}=#{port.to}"
        end
      end

      res.join "\n"
    end

    def write_dotenv
      File.open(root.join(".env.services"), "w") { |f| f.write dotenv }
    end

    def clear_dotenv
      File.open(root.join(".env.services"), "w") { |f| f.write "" }
    end

    def dotenv
      <<~DOTENV
        ####################################################
        #     This file is generated by devup command.     #
        #     Home: https://github.com/sergio-fry/devup    #
        ####################################################
        # START
        #{env}
        # END

      DOTENV
    end
  end
end
